{"version":3,"sources":["components/Clue.js","lib/clue/generateSelectedClass.js","components/Clues.js","components/Header.js","examples/index.js","components/Modal.js","lib/constants.js","components/Cell.js","components/Row.js","components/Puzzle.js","lib/puzzle/clonePuzzle.js","lib/puzzle/constructPuzzle.js","lib/puzzle/determineIfFull.js","lib/clue/normalizeClues.js","lib/puzzle/checkIsWinner.js","lib/cell/move.js","lib/cell/jump.js","lib/cell/skip.js","lib/cell/step.js","lib/puzzle/formatDate.js","components/App.js","index.js"],"names":["Clue","selectClue","_this","props","handleClick","number","direction","react_default","a","createElement","className","this","selectedClass","onClick","text","PureComponent","generateSelectedClass","selectedClue","clue","Clues","_ref","clues","toUpperCase","slice","map","i","components_Clue","key","concat","Header","hastitle","title","date","openModal","author","examples","Modal","type","example","handleChange","Date","dow","role","aria-label","ACROSS","BLOCK","DOWN","EMPTY","UP","RIGHT","LEFT","Cell","cellClueNumber","inputClass","selectedClueClass","value","selectInputCell","index","Row","row","inputCell","col","react","cell","components_Cell","input","isInputCell","Puzzle","selectedClueText","style","gridTemplateColumns","puzzle","length","gridTemplateRows","components_Row","clonePuzzle","r","c","Object","objectSpread","constructPuzzle","grid","gridnums","size","currentAcrossClueNumber","numberCoords","constructedPuzzle","colToDownNumberMap","gridIndex","rows","cols","across","down","push","determineIfFull","normalizeClues","parseInt","replace","checkIsWinner","every","moveUp","move","predicate","moveRight","moveLeft","moveDown","jumpUp","moveUpFn","hasEncounteredBlock","hasEncounteredCell","topBlankCellRow","jumpRight","moveRightFn","jumpLeft","moveLeftFn","leftmostBlankColumn","jumpDown","moveDownFn","jump","startCell","_startCell","slicedToArray","getStepFunction","skipRight","skipDown","skip","getSkipFunction","stepUp","stepRight","stepLeft","stepDown","step","formatDate","weekday","toLocaleString","month","getDate","getFullYear","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","event","code","handleArrowKey","preventDefault","loadPuzzle","rawPuzzle","find","toISOString","state","setState","isLoading","modalType","arrangePuzzle","_this$state$rawPuzzle","_constructPuzzle","selectDate","toConsumableArray","handleCellClick","_ref2","doToggleDirection","toggleDirection","inputCharacter","keyCode","inputLetter","handleBackspace","toggleModal","_this$state$inputCell","_this$state","arrowDirection","match","toLowerCase","_inputCell","nextRow","nextCol","shiftKey","_move","includes","_move2","_step","_step2","letter","_this$state2","_inputCell2","isCellEmpty","nextCell","searchDirection","_move3","_move4","_inputCell3","updatedSelectedClue","_this$state$inputCell2","updatedSelectedDirection","updatedSelectedNumber","directions","arguments","undefined","initialState","entries","document","removeEventListener","_this2","_this$state3","components_Header","components_Puzzle","components_Clues","ReactDOM","createPortal","components_Modal","getElementById","Component","render","components_App"],"mappings":"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","file":"static/js/main.0eb29c9d.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/clue.css'\n\nclass Clue extends PureComponent {\n  selectClue = () => {\n    this.props.handleClick(this.props.number, this.props.direction)\n  }\n\n  render () {\n    return (\n      <li\n        className={'clue' + this.props.selectedClass}\n        onClick={this.selectClue}\n      >\n        {this.props.number} {this.props.text}\n      </li>\n    )\n  }\n}\n\nClue.propTypes = {\n  number: PropTypes.number,\n  direction: PropTypes.string,\n  selectClue: PropTypes.func,\n  selectedClass: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default Clue\n","function generateSelectedClass (selectedClue, clue) {\n  if (!selectedClue.direction || !selectedClue.number) {\n    return ''\n  }\n\n  if (selectedClue.direction !== clue.direction || selectedClue.number !== clue.number) {\n    return ''\n  }\n\n  return ' selected'\n}\n\nexport default generateSelectedClass\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Clue from './Clue'\n\nimport generateSelectedClass from '../lib/clue/generateSelectedClass'\n\nfunction Clues ({ clues, direction, handleClick, selectedClue }) {\n  return (\n    <div className={direction}>\n      <h4>{direction[0].toUpperCase() + direction.slice(1)}</h4>\n\n      <ul className='clues'>\n        {\n          clues.map((clue, i) => (\n            <Clue\n              key={`clue-${i}`}\n              text={clue.text}\n              selectedClass={generateSelectedClass(selectedClue, clue)}\n              direction={direction}\n              number={clue.number}\n              handleClick={handleClick}\n            />\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nClues.propTypes = {\n  clues: PropTypes.array,\n  direction: PropTypes.string,\n  handleClick: PropTypes.func,\n  selectedClue: PropTypes.object\n}\n\nexport default Clues\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Header (props) {\n  function openModal () {\n    props.openModal('calendar')\n  }\n\n  return (\n    <div className='header'>\n      <div className='title'>\n        <h1>{props.hastitle ? props.title : 'NY Times Daily Crossword'}</h1>\n      </div>\n      <p>\n        {props.date} <span className='date-link' onClick={openModal}>(change date)</span>\n      </p>\n      <p>By {props.author}</p>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  author: PropTypes.string,\n  date: PropTypes.string,\n  hastitle: PropTypes.bool,\n  openModal: PropTypes.func,\n  title: PropTypes.string\n}\n\nexport default Header\n","import march18 from './3-18-2019.json'\nimport march31 from './3-31-2019.json'\nimport april2 from './4-2-2019.json'\n\nexport default [\n  march18,\n  march31,\n  april2\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport examples from '../examples'\n\nfunction Modal (props) {\n  return (\n    <div className='modal-container'>\n      <div\n        className='modal-background'\n        onClick={props.handleClick}\n      />\n      <div className='modal-body'>\n        {\n          props.type === 'calendar' &&\n          <ul className='message'>\n            <h3>Please select from the following example puzzles:</h3>\n            {\n              examples.map(example => (\n                <li\n                  key={example.date}\n                  onClick={() => props.handleChange(new Date(example.date))}\n                  className='example-puzzle'\n                >\n                  {example.dow}, {example.date}\n                </li>\n              ))\n            }\n          </ul>\n        }\n\n        {\n          props.type === 'correct' &&\n          <div className='message'><h3>Congratulations, you solved the puzzle! <span role='img' aria-label='tada emoji'>🎉</span><span role='img' aria-label='boom emoji'>💥</span><span role='img' aria-label='ok-hand emoji'>👌</span></h3></div>\n        }\n\n        {\n          props.type === 'incorrect' &&\n          <div className='message'><h3>Oh no, there is at least one incorrect answer. Keep trying!</h3></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nModal.propTypes = {\n  handleClick: PropTypes.func,\n  handleChange: PropTypes.func,\n  date: PropTypes.object,\n  type: PropTypes.string\n}\n\nexport default Modal\n","export const ACROSS = 'across'\nexport const BLOCK = '.'\nexport const DOWN = 'down'\nexport const EMPTY = ''\n\nexport const UP = 'up'\nexport const RIGHT = 'right'\nexport const LEFT = 'left'\n","import React from 'react'\n\nimport { BLOCK } from '../lib/constants'\n\nimport '../css/cell.css'\n\n// TODO - HOC for these iterations?\n\nfunction Cell (props) {\n  const { cellClueNumber, inputClass, selectedClueClass, value } = props\n  const selectInputCell = () => {\n    props.selectInputCell(props.index)\n  }\n\n  if (value === BLOCK) {\n    return <div className='cell block' />\n  }\n\n  return (\n    <div\n      className={`cell ${inputClass + selectedClueClass}`}\n      onClick={selectInputCell}\n    >\n      {\n        cellClueNumber !== 0 &&\n        <div className='number'>{cellClueNumber}</div>\n      }\n      <div className='value'>{value}</div>\n    </div>\n  )\n}\n\nexport default Cell\n","import React, { Fragment } from 'react'\nimport Cell from './Cell'\n\nfunction Row (props) {\n  const {\n    index,\n    row,\n    inputCell,\n    selectedClue\n  } = props\n  const selectInputCell = (col) => props.selectInputCell([index, col])\n\n  return (\n    <Fragment>\n      {\n        row.map((cell, i) => (\n          <Cell\n            key={`cell-${i}`}\n            index={i}\n            value={cell.input}\n            cellClueNumber={cell.cellClueNumber}\n            isInputCell={inputCell[0] === index && inputCell[1] === i}\n            inputClass={\n              inputCell[0] === index && inputCell[1] === i\n                ? ' input'\n                : ''\n            }\n            selectedClueClass={\n              // [cell.acrossClueNumber, cell.downClueNumber].includes(selectedClue.number)\n              cell.clues[selectedClue.direction] === selectedClue.number\n                ? ' selected-clue'\n                : ''\n            }\n            selectInputCell={selectInputCell}\n          />\n        ))\n      }\n    </Fragment>\n  )\n}\n\n// function Row (props) {\n//   return (\n//     <div className='row'>\n//       {\n//         // props.cols.map((col, i) => <Cell key={`col-${i}`} value={props.cols[i]} number={props.numbers[i]} />)\n//         props.row.map((cell, i) => (\n//           <Cell\n//             key={`cell-${i}`}\n//             value={cell.input}\n//             number={cell.clueNumber}\n//             isInputCell={props.inputCell[0] === props.index && props.inputCell[1] === i}\n//           />\n//         ))\n//       }\n//     </div>\n//   )\n// }\n\nexport default Row\n","import React from 'react'\n\nimport Row from './Row'\n\nimport '../css/puzzle.css'\n\nfunction Puzzle (props) {\n  return (\n    <div className='puzzle-container'>\n      <div className='selected-clue-header'>\n        <div className='selected-clue-number'>{props.selectedClue.number}{props.selectedClue.direction[0].toUpperCase()}</div>\n        <div className='selected-clue-text'>{props.selectedClueText}</div>\n      </div>\n\n      <div\n        className='puzzle'\n        style={{\n          gridTemplateColumns: `repeat(${props.puzzle[0].length}, 1fr)`,\n          gridTemplateRows: `repeat(${props.puzzle.length}, 1fr)`\n        }}\n      >\n        {\n          props.puzzle.map((row, i) => (\n            <Row\n              key={`row-${i}`}\n              index={i}\n              row={row}\n              inputCell={props.inputCell}\n              selectedClue={props.selectedClue}\n              selectInputCell={props.selectInputCell}\n            />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Puzzle\n","function clonePuzzle (puzzle) {\n  return puzzle.map(r => r.map(c => ({ ...c })))\n}\n\nexport default clonePuzzle\n","import { BLOCK, EMPTY } from '../constants'\n\n\n// TODO - unit test!!!\n\n\n/**\n * We need to do the following things:\n *\n * 1. Transform the flat grid into a 2D array of rows and cells\n * 2. Assign outputNumbers to appropriate cells\n * 3. Assign the numbers to the clues to which the cell belongs\n *  - Each cell belongs to both an across clue and a down clue,\n *    we need to store that data for puzzle-clue-highlighting\n */\nfunction constructPuzzle (grid, gridnums, size) {\n  const numberCoords = {}\n  const constructedPuzzle = []\n  const colToDownNumberMap = {}\n\n  let gridIndex = 0\n  let cell\n  let cellClueNumber\n  let currentAcrossClueNumber\n  let row\n  let value\n\n  for (let r = 0; r < size.rows; r++) {\n    row = []\n\n    for (let c = 0; c < size.cols; c++) {\n      cellClueNumber = gridnums[gridIndex]\n      value = grid[gridIndex]\n\n      if (cellClueNumber > 0) {\n        numberCoords[cellClueNumber] = [r, c]\n\n        if (c === 0 || row[c - 1].value === BLOCK) {\n          currentAcrossClueNumber = cellClueNumber\n        }\n\n        if (r === 0 || constructedPuzzle[r - 1][c].value === BLOCK) {\n          colToDownNumberMap[c] = cellClueNumber\n        }\n      }\n\n      cell = {\n        cellClueNumber,\n        value,\n        // TODO - rename this?\n        clues: {\n          across: currentAcrossClueNumber,\n          down: colToDownNumberMap[c]\n        },\n        input: (value === BLOCK) ? value : EMPTY\n      }\n\n      row.push(cell)\n      gridIndex++\n    }\n\n    constructedPuzzle.push(row)\n  }\n\n  return {\n    numberCoords,\n    constructedPuzzle\n  }\n}\n\nexport default constructPuzzle\n","import { EMPTY } from '../constants'\n\nfunction determineIfFull (puzzle) {\n  for (let r = 0; r < puzzle.length; r++) {\n    for (let c = 0; c < puzzle[0].length; c++) {\n      if (puzzle[r][c].input === EMPTY) return false\n    }\n  }\n\n  return true\n}\n\nexport default determineIfFull\n","function normalizeClues (clues, direction) {\n  let number\n\n  const normalizedClues = clues.map((clue) => {\n    number = parseInt(clue, 10)\n\n    return {\n      direction,\n      number,\n      text: clue.replace(`${number}. `, '').replace(/&quot;/g, '\"')\n    }\n  })\n\n  return normalizedClues\n}\n\nexport default normalizeClues\n","function checkIsWinner (puzzle) {\n  return puzzle.every((row) => row.every(cell => cell.input.toUpperCase() === cell.value.toUpperCase()))\n}\n\nexport default checkIsWinner\n","export function moveUp (row, col, puzzle) {\n  const move = (r, predicate) => {\n    if (r <= 0) return [row, col]\n    if (predicate(r)) return [r - 1, col]\n\n    return move(r - 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveRight (row, col, puzzle) {\n  const move = (c, predicate) => {\n    if (c >= puzzle[0].length - 1) return [row, col]\n    if (predicate(c)) return [row, c + 1]\n    return move(c + 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveLeft (row, col, puzzle) {\n  const move = (c, predicate) => {\n    if (c <= 0) return [row, col]\n    if (predicate(c)) return [row, c - 1]\n    return move(c - 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveDown (row, col, puzzle) {\n  const move = (r, predicate) => {\n    if (r >= puzzle.length - 1) return [row, col]\n    if (predicate(r)) return [r + 1, col]\n    return move(r + 1, predicate)\n  }\n\n  return move\n}\n","/**\n * Jump to the next clue\n */\nimport { moveUp, moveRight, moveLeft, moveDown } from './move'\nimport { BLOCK, EMPTY } from '../constants'\n\nfunction jump (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getStepFunction(direction)(row, col, puzzle)\n}\n\nfunction getStepFunction (direction) {\n  switch (direction) {\n    case 'up':\n      return jumpUp\n    case 'right':\n      return jumpRight\n    case 'left':\n      return jumpLeft\n    case 'down':\n    default:\n      return jumpDown\n  }\n}\n\nfunction jumpUp (row, col, puzzle) {\n  const moveUpFn = moveUp(row, col, puzzle)\n  let hasEncounteredBlock = false\n  let hasEncounteredCell = false\n  let topBlankCellRow = row\n\n  const determineStop = (r) => {\n    if (puzzle[r - 1][col].value === BLOCK) {\n      if (hasEncounteredBlock && hasEncounteredCell) return true\n\n      hasEncounteredBlock = true\n    } else {\n      if (hasEncounteredBlock) hasEncounteredCell = true\n    }\n\n    if (puzzle[r - 1][col].input === EMPTY && r - 1 < topBlankCellRow) {\n      topBlankCellRow = r - 1\n      return false\n    }\n\n    return false\n  }\n\n  moveUpFn(row, determineStop)\n\n  return [topBlankCellRow, col]\n}\n\nfunction jumpRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  let hasEncounteredBlock = false\n\n  const determineStop = (c) => {\n    if (puzzle[row][c + 1].value === BLOCK) hasEncounteredBlock = true\n    return hasEncounteredBlock && puzzle[row][c + 1].input === EMPTY\n  }\n\n  return moveRightFn(col, determineStop)\n}\n\nfunction jumpLeft (row, col, puzzle) {\n  const moveLeftFn = moveLeft(row, col, puzzle)\n  let hasEncounteredBlock = false\n  let hasEncounteredCell = false\n  let leftmostBlankColumn = col\n\n  const determineStop = (c) => {\n    if (puzzle[row][c - 1].value === BLOCK) {\n      if (hasEncounteredBlock && hasEncounteredCell) return true\n\n      hasEncounteredBlock = true\n    } else {\n      if (hasEncounteredBlock) hasEncounteredCell = true\n    }\n\n    if (puzzle[row][c - 1].input === EMPTY && c - 1 < leftmostBlankColumn) {\n      leftmostBlankColumn = c - 1\n      return false\n    }\n\n    return false\n  }\n\n  moveLeftFn(col, determineStop)\n\n  return [row, leftmostBlankColumn]\n}\n\nfunction jumpDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  let hasEncounteredBlock = false\n  const determineStop = (r) => {\n    if (puzzle[r + 1][col].value === BLOCK) hasEncounteredBlock = true\n    return hasEncounteredBlock && puzzle[r + 1][col].input === EMPTY\n  }\n\n  return moveDownFn(row, determineStop)\n}\n\nexport default jump\n","import { moveRight, moveDown } from './move'\nimport { EMPTY } from '../constants'\n\nfunction skip (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getSkipFunction(direction)(row, col, puzzle)\n}\n\nfunction getSkipFunction (direction) {\n  switch (direction) {\n    case 'right':\n      return skipRight\n    case 'down':\n    default:\n      return skipDown\n  }\n}\n\nfunction skipRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  return moveRightFn(col, c => puzzle[row][c + 1].input === EMPTY)\n}\n\nfunction skipDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  return moveDownFn(row, r => puzzle[r + 1][col].input === EMPTY)\n}\n\nexport default skip\n","import { moveUp, moveRight, moveLeft, moveDown } from './move'\nimport { BLOCK } from '../constants'\n\nfunction step (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getStepFunction(direction)(row, col, puzzle)\n}\n\nfunction getStepFunction (direction) {\n  switch (direction) {\n    case 'up':\n      return stepUp\n    case 'right':\n      return stepRight\n    case 'left':\n      return stepLeft\n    case 'down':\n    default:\n      return stepDown\n  }\n}\n\nfunction stepUp (row, col, puzzle) {\n  const moveUpFn = moveUp(row, col, puzzle)\n  return moveUpFn(row, r => puzzle[r - 1][col].value !== BLOCK)\n}\n\nfunction stepRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  return moveRightFn(col, c => puzzle[row][c + 1].value !== BLOCK)\n}\n\nfunction stepLeft (row, col, puzzle) {\n  const moveLeftFn = moveLeft(row, col, puzzle)\n  return moveLeftFn(col, c => puzzle[row][c - 1].value !== BLOCK)\n}\n\nfunction stepDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  return moveDownFn(row, r => puzzle[r + 1][col].value !== BLOCK)\n}\n\nexport default step\n","function formatDate (date) {\n  const weekday = date.toLocaleString('en-us', { weekday: 'long' })\n  const month = date.toLocaleString('en-us', { month: 'long' })\n\n  return `${weekday}, ${month} ${date.getDate()}, ${date.getFullYear()}`\n}\n\nexport default formatDate\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Clues from './Clues'\nimport Header from './Header'\nimport Modal from './Modal'\nimport Puzzle from './Puzzle'\n\nimport examples from '../examples'\n\nimport clonePuzzle from '../lib/puzzle/clonePuzzle'\nimport constructPuzzle from '../lib/puzzle/constructPuzzle'\nimport determineIfFull from '../lib/puzzle/determineIfFull'\nimport normalizeClues from '../lib/clue/normalizeClues'\nimport checkIsWinner from '../lib/puzzle/checkIsWinner'\nimport jump from '../lib/cell/jump'\nimport skip from '../lib/cell/skip'\nimport step from '../lib/cell/step'\nimport formatDate from '../lib/puzzle/formatDate'\nimport {\n  ACROSS,\n  BLOCK,\n  DOWN,\n  EMPTY,\n  UP,\n  RIGHT,\n  LEFT\n} from '../lib/constants'\n\nimport '../css/App.css'\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.initialState = {\n      clues: {\n        across: [],\n        down: []\n      },\n      date: new Date(examples[0].date),\n      modalType: '',\n      entries: [],\n      inputCell: [0, 0],\n      isLoading: false,\n      numberCoords: {},\n      puzzle: [],\n      rawPuzzle: {},\n      selectedClue: {\n        number: 1,\n        direction: ACROSS\n      }\n    }\n\n    this.state = { ...this.initialState }\n    this.directions = [ACROSS, DOWN]\n  }\n\n  componentDidMount () {\n    this.loadPuzzle()\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keyup', this.inputCharacter, false)\n    document.removeEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  handleKeyDown = (event) => {\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'ArrowRight':\n      case 'ArrowDown':\n      case 'ArrowLeft': {\n        return this.handleArrowKey(event)\n      }\n      case 'Space':\n        event.preventDefault()\n        break\n      default:\n        return false\n    }\n  }\n\n  loadPuzzle = () => {\n    const rawPuzzle = examples.find(example => new Date(example.date).toISOString() === this.state.date.toISOString()) || examples[0]\n\n    this.setState(() => ({ isLoading: false, modalType: '', rawPuzzle }), this.arrangePuzzle)\n  }\n\n  arrangePuzzle = () => {\n    const { clues, grid, gridnums, size } = this.state.rawPuzzle\n    const { numberCoords, constructedPuzzle: puzzle } = constructPuzzle(grid, gridnums, size)\n    const across = normalizeClues(clues.across, ACROSS)\n    const down = normalizeClues(clues.down, DOWN)\n\n    this.setState(() => ({ puzzle, numberCoords, clues: { across, down } }))\n  }\n\n  selectDate = (date) => {\n    if (date.toISOString() === this.state.date.toISOString()) return false\n\n    this.setState({ date }, () => {\n      this.loadPuzzle()\n    })\n  }\n\n  selectClue = (number, direction) => {\n    this.setState(() => ({\n      selectedClue: { direction, number },\n      inputCell: [...this.state.numberCoords[number]]\n    }))\n  }\n\n  handleCellClick = ([row, col]) => {\n    const doToggleDirection = (row === this.state.inputCell[0] && col === this.state.inputCell[1])\n\n    this.selectInputCell([row, col])\n\n    if (doToggleDirection) this.toggleDirection()\n  }\n\n  inputCharacter = (event) => {\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      return this.inputLetter(event.key.toUpperCase())\n    }\n\n    switch (event.code) {\n      case 'Space': {\n        return this.toggleDirection()\n      }\n      case 'Backspace': {\n        return this.handleBackspace()\n      }\n      case 'Escape': {\n        if (this.state.modalType.length > 0) {\n          this.toggleModal('')\n        }\n        break\n      }\n      default: {\n        return false\n      }\n    }\n  }\n\n  handleBackspace = () => {\n    const puzzle = clonePuzzle(this.state.puzzle)\n    let [row, col] = this.state.inputCell\n\n    if (puzzle[row][col].input === EMPTY) {\n      if (this.state.selectedClue.direction === ACROSS) {\n        if (col === 0 || puzzle[row][col - 1].value === BLOCK) return false\n\n        col--\n      } else {\n        if (row === 0 || puzzle[row - 1][col].value === BLOCK) return false\n\n        row--\n      }\n    }\n\n    puzzle[row][col].input = EMPTY\n\n    this.setState(() => ({ puzzle, inputCell: [row, col] }))\n  }\n\n  handleArrowKey = (event) => {\n    const { inputCell, puzzle, selectedClue } = this.state\n    const arrowDirection = event.code.match(/Arrow(Up|Right|Down|Left)/)[1].toLowerCase()\n\n    let [nextRow, nextCol] = inputCell\n\n    if (event.shiftKey) {\n      const isSameAxis = (\n        ([LEFT, RIGHT].includes(arrowDirection) && selectedClue.direction === ACROSS) ||\n        ([UP, DOWN].includes(arrowDirection) && selectedClue.direction === DOWN)\n      )\n      const move = isSameAxis ? jump : step;\n      [nextRow, nextCol] = move(puzzle, inputCell, arrowDirection)\n    } else {\n      const doChangeDirection = (\n        ([LEFT, RIGHT].includes(arrowDirection) && selectedClue.direction === DOWN) ||\n        ([UP, DOWN].includes(arrowDirection) && selectedClue.direction === ACROSS)\n      )\n\n      if (doChangeDirection) return this.toggleDirection();\n\n      [nextRow, nextCol] = step(puzzle, inputCell, arrowDirection)\n    }\n\n    if (nextRow !== inputCell[0] || nextCol !== inputCell[1]) {\n      this.selectInputCell([nextRow, nextCol])\n    }\n  }\n\n  inputLetter = (letter) => {\n    const puzzle = clonePuzzle(this.state.puzzle)\n    const { inputCell, selectedClue } = this.state\n    const [row, col] = inputCell\n    const isCellEmpty = puzzle[row][col].input === EMPTY\n\n    puzzle[row][col].input = letter\n\n    this.setState(() => ({ puzzle }), () => {\n      if (determineIfFull(this.state.puzzle)) {\n        if (checkIsWinner(this.state.puzzle)) this.toggleModal('correct')\n        else this.toggleModal('incorrect')\n      }\n\n      // TODO - Maybe create separate functions for these checks\n      if (\n        (selectedClue.direction === ACROSS && col === puzzle[0].length - 1) ||\n        (selectedClue.direction === DOWN && row === puzzle.length - 1)\n      ) {\n        return false\n      }\n\n      const nextCell = selectedClue.direction === ACROSS ? puzzle[row][col + 1] : puzzle[row + 1][col]\n      const isEndOfClue = !nextCell || nextCell.value === BLOCK\n\n      if (isEndOfClue) return false\n\n      const searchDirection = selectedClue.direction === DOWN ? DOWN : RIGHT\n      const move = isCellEmpty ? skip : step\n      const [nextRow, nextCol] = move(this.state.puzzle, inputCell, searchDirection)\n\n      this.selectInputCell([nextRow, nextCol])\n    })\n  }\n\n  selectInputCell = (inputCell) => {\n    const [row, col] = inputCell\n    const { direction } = this.state.selectedClue\n    const updatedSelectedClue = {\n      direction,\n      number: this.state.puzzle[row][col].clues[direction]\n    }\n\n    this.setState(() => ({ inputCell: [...inputCell], selectedClue: updatedSelectedClue }))\n  }\n\n  toggleDirection = () => {\n    const [row, col] = this.state.inputCell\n    const { direction } = this.state.selectedClue\n    let updatedSelectedDirection = direction\n    let updatedSelectedNumber = this.state.puzzle[row][col].clues[direction]\n\n    updatedSelectedDirection = updatedSelectedDirection === this.directions[0] ? this.directions[1] : this.directions[0]\n\n    if (this.state.puzzle[row][col].clues[updatedSelectedDirection] !== updatedSelectedNumber) {\n      updatedSelectedNumber = this.state.puzzle[row][col].clues[updatedSelectedDirection]\n    }\n\n    const updatedSelectedClue = {\n      direction: updatedSelectedDirection,\n      number: updatedSelectedNumber\n    }\n\n    this.setState(() => ({ selectedClue: updatedSelectedClue }))\n  }\n\n  toggleModal = (type = '') => {\n    this.setState({ modalType: type })\n  }\n\n  render () {\n    const { clues, date, puzzle, inputCell, isLoading, rawPuzzle, selectedClue } = this.state\n\n    return (\n      <div className='App'>\n        <Header\n          openModal={this.toggleModal}\n          author={rawPuzzle.author}\n          date={formatDate(date)}\n          hastitle={rawPuzzle.hastitle}\n          title={rawPuzzle.title}\n        />\n\n        <div className='puzzle-area'>\n          {\n            isLoading &&\n            <div className='loading'>Loading puzzle...</div>\n          }\n          {\n            puzzle.length > 0 &&\n            <Puzzle\n              inputCell={inputCell}\n              puzzle={puzzle}\n              selectedClue={selectedClue}\n              selectedClueText={this.state.clues[selectedClue.direction].find(c => c.number === selectedClue.number).text}\n              selectInputCell={this.handleCellClick}\n            />\n          }\n\n          {\n            this.directions.map((direction, i) => (\n              <Clues\n                key={`${i}-${direction}`}\n                clues={clues[direction]}\n                direction={direction}\n                selectedClue={selectedClue}\n                handleClick={this.selectClue}\n              />\n            ))\n          }\n        </div>\n\n        {\n          this.state.modalType.length > 0 &&\n          ReactDOM.createPortal(\n            <Modal\n              date={this.state.date}\n              handleClick={this.toggleModal}\n              handleChange={this.selectDate}\n              type={this.state.modalType}\n            />\n            , document.getElementById('modalRoot'))\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}